stages:
  - build
  - deploy

build-image:
  stage: build
  image:
    name: docker.io/distrolessman/auto-ci:node-16.17.0-alpine
    entrypoint: [ "" ]
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - node_modules
  before_script:
    - export $ENV_DEPLOY
    - cp .pattern-env .env
  script:
    - npm install
    - NODE_ENV=production npm run build
    - mkdir -p /kaniko/.docker
    - cp $KANIKO_AUTH_CONFIG /kaniko/.docker/config.json
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CONTAINER_REGISTRY}/${IMAGE_NAME}:${TAG}"
      --use-new-run=true
  tags:
    - ec-k8s-runner

deploy-dev:
  stage: deploy
  image:
    name: docker.io/distrolessman/auto-ci:java11-alpine
    entrypoint: [ "" ]
  dependencies: []
  cache: []
  before_script:
    - export $ENV_DEPLOY
  script:
    - curl -o "chart_repo.tar.gz" $CHART_GIT_ARCHIVED_URL && mkdir workspace && tar xzf chart_repo.tar.gz -C workspace --strip-components 1 && cd ./workspace
    - mkdir -p $HOME/.kube && cp $KUBE_CONFIG_FILE "$HOME/.kube/config"
    - kubectl apply -n $NAME_SPACE -f configmaps/$ENV/$GROUP/$NAME.yaml -f secrets/$ENV/$GROUP/$NAME.yaml
    - helm upgrade --install --recreate-pods -n $NAME_SPACE $SERVICE_NAME $CHART_DIR -f values/$ENV/$GROUP/$NAME.yaml
  tags:
    - ec-k8s-runner